<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>