<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EEJ06/YfpqmUjlEBFUAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="picIMGPass.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnLogin.Values.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5QEVCCUnkxCauAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADeSURBVDhP
        jYs9CsJgEESD1tprJ1beQg9hb6HXEBu9g9YKmtZOD+HPVRSCoKyz7pBNvk9CHgwsb3aSf4jICDkjT+SB
        nJAh62rwOEM+SIi6Kd/+g4c+8tJvsEQ6SBdZqQDa9fgeg3LxexPZU+XAHaySOVUMyp39yIQqR51VsqWK
        QZnaj4ypctRZJSlVGRSZ9bXIOHNY1IYzhz7kglztLMOZQ19Ehw3mpqIIZw59ER01mbuKIpw59CEDJoIz
        hz6kjbTsLMOZQx9yZCI4c+DeVtXizZkDudHiV1ejP2tbJckXKwJuCM0wIuYAAAAASUVORK5CYII=
</value>
  </data>
</root>