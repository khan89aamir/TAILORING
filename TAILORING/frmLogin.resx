<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <data name="txtPassword.sGlowColor" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAD9nR2xvd0JveCwgVmVyc2lvbj0xLjAuMi4wLCBDdWx0dXJlPW5l
        dXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwFAQAAACJnR2xvd0JveC5nR2xvd0dyb3VwQm94K1Nlcmlh
        bENvbG9yBQAAAAROYW1lAUEBUgFHAUIBAAAAAAgICAgCAAAABgMAAAAFR3JlZW7/AAAAAAAAAIAAAAAA
        AAAACw==
</value>
  </data>
  <data name="txtUserName.sGlowColor" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAD9nR2xvd0JveCwgVmVyc2lvbj0xLjAuMi4wLCBDdWx0dXJlPW5l
        dXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwFAQAAACJnR2xvd0JveC5nR2xvd0dyb3VwQm94K1Nlcmlh
        bENvbG9yBQAAAAROYW1lAUEBUgFHAUIBAAAAAAgICAgCAAAABgMAAAAFR3JlZW7/AAAAAAAAAIAAAAAA
        AAAACw==
</value>
  </data>
  <data name="picIMGPass.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>